# Generated by Django 5.2.6 on 2025-09-12 14:46

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0031_documentconversion'),
    ]

    operations = [
        migrations.CreateModel(
            name='ColledgeClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('rules', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=False)),
                ('max_members', models.PositiveIntegerField(choices=[(500, 'R200 for 500 people'), (1000, 'R400 for 1000 people'), (2000, 'R600 for 2000 people')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ColledgeMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='user',
            options={},
        ),
        migrations.AlterField(
            model_name='assignment',
            name='instruction_file',
            field=models.FileField(blank=True, null=True, upload_to='assignments/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'ppt', 'pptx', 'jpg', 'jpeg', 'png'])]),
        ),
        migrations.AlterField(
            model_name='assignmentsubmission',
            name='submission_file',
            field=models.FileField(upload_to='submissions/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])]),
        ),
        migrations.AlterField(
            model_name='canvaspage',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='canvas_pages/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])]),
        ),
        migrations.AlterField(
            model_name='documentconversion',
            name='converted_file',
            field=models.FileField(blank=True, null=True, upload_to='conversions/converted/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])]),
        ),
        migrations.AlterField(
            model_name='documentconversion',
            name='original_file',
            field=models.FileField(upload_to='conversions/originals/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])]),
        ),
        migrations.AlterField(
            model_name='draftingcanvas',
            name='image',
            field=models.ImageField(upload_to='drafting_canvases/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])]),
        ),
        migrations.AlterField(
            model_name='draftingsession',
            name='canvas_image',
            field=models.ImageField(blank=True, null=True, upload_to='draft_canvas/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])]),
        ),
        migrations.AlterField(
            model_name='draftingsession',
            name='pdf_file',
            field=models.FileField(upload_to='draft_pdfs/', validators=[django.core.validators.FileExtensionValidator(['pdf'])]),
        ),
        migrations.AlterField(
            model_name='post',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='posts/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])]),
        ),
        migrations.AlterField(
            model_name='subject',
            name='cover_image',
            field=models.ImageField(blank=True, null=True, upload_to='subject_covers/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])]),
        ),
        migrations.AlterField(
            model_name='subjectfile',
            name='file',
            field=models.FileField(upload_to='subject_files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'ppt', 'pptx', 'jpg', 'jpeg', 'png'])]),
        ),
        migrations.AlterField(
            model_name='user',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='profile_pics/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])]),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='profiles/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])]),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['subject'], name='core_assign_subject_cb1c4d_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['due_date'], name='core_assign_due_dat_5b7b5a_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['assignment'], name='core_assign_assignm_afe291_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['student'], name='core_assign_student_4e98fa_idx'),
        ),
        migrations.AddIndex(
            model_name='studenttestsubmission',
            index=models.Index(fields=['test'], name='core_studen_test_id_f4cbfa_idx'),
        ),
        migrations.AddIndex(
            model_name='studenttestsubmission',
            index=models.Index(fields=['student'], name='core_studen_student_2e9325_idx'),
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['school_id'], name='core_subjec_school__75ba4b_idx'),
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['grade'], name='core_subjec_grade_40ff44_idx'),
        ),
        migrations.AddIndex(
            model_name='subjecttest',
            index=models.Index(fields=['subject'], name='core_subjec_subject_6a9afd_idx'),
        ),
        migrations.AddIndex(
            model_name='subjecttest',
            index=models.Index(fields=['date'], name='core_subjec_date_64654b_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='core_user_role_73872d_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['school_id'], name='core_user_school__631f12_idx'),
        ),
        migrations.AddField(
            model_name='colledgeclass',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_colledges', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='colledgemembership',
            name='colledge_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='core.colledgeclass'),
        ),
        migrations.AddField(
            model_name='colledgemembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colledge_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='colledgemembership',
            unique_together={('colledge_class', 'user')},
        ),
    ]
